# Generated by ariadne-codegen
# Source: release_helper/issue_management/linear/schema.graphql

from enum import Enum


class PaginationOrderBy(str, Enum):
    createdAt = "createdAt"
    updatedAt = "updatedAt"


class ProjectUpdateReminderFrequency(str, Enum):
    week = "week"
    twoWeeks = "twoWeeks"
    never = "never"


class Day(str, Enum):
    Sunday = "Sunday"
    Monday = "Monday"
    Tuesday = "Tuesday"
    Wednesday = "Wednesday"
    Thursday = "Thursday"
    Friday = "Friday"
    Saturday = "Saturday"


class ReleaseChannel(str, Enum):
    internal = "internal"
    beta = "beta"
    preRelease = "preRelease"
    public = "public"


class ProjectNotificationSubscriptionType(str, Enum):
    importantOnly = "importantOnly"
    custom = "custom"
    all = "all"


class ProjectUpdateHealthType(str, Enum):
    onTrack = "onTrack"
    atRisk = "atRisk"
    offTrack = "offTrack"


class OAuthClientApprovalStatus(str, Enum):
    requested = "requested"
    approved = "approved"
    denied = "denied"


class OrganizationDomainAuthType(str, Enum):
    saml = "saml"
    general = "general"


class UserRoleType(str, Enum):
    admin = "admin"
    guest = "guest"
    user = "user"


class WorkflowType(str, Enum):
    sla = "sla"
    custom = "custom"


class WorkflowTrigger(str, Enum):
    entityCreated = "entityCreated"
    entityUpdated = "entityUpdated"
    entityCreatedOrUpdated = "entityCreatedOrUpdated"
    entityRemoved = "entityRemoved"
    entityUnarchived = "entityUnarchived"


class WorkflowTriggerType(str, Enum):
    issue = "issue"
    project = "project"


class SlaStatus(str, Enum):
    Breached = "Breached"
    HighRisk = "HighRisk"
    MediumRisk = "MediumRisk"
    LowRisk = "LowRisk"
    Completed = "Completed"
    Failed = "Failed"


class IssueRelationType(str, Enum):
    blocks = "blocks"
    duplicate = "duplicate"
    related = "related"


class PushSubscriptionType(str, Enum):
    web = "web"
    apple = "apple"


class ViewPreferencesType(str, Enum):
    organization = "organization"
    user = "user"


class ViewType(str, Enum):
    inbox = "inbox"
    myIssues = "myIssues"
    myIssuesCreatedByMe = "myIssuesCreatedByMe"
    myIssuesSubscribedTo = "myIssuesSubscribedTo"
    myIssuesActivity = "myIssuesActivity"
    userProfile = "userProfile"
    userProfileCreatedByUser = "userProfileCreatedByUser"
    board = "board"
    completedCycle = "completedCycle"
    cycle = "cycle"
    project = "project"
    label = "label"
    triage = "triage"
    activeIssues = "activeIssues"
    backlog = "backlog"
    allIssues = "allIssues"
    customView = "customView"
    customRoadmap = "customRoadmap"
    roadmap = "roadmap"
    roadmaps = "roadmaps"
    roadmapAll = "roadmapAll"
    roadmapClosed = "roadmapClosed"
    roadmapBacklog = "roadmapBacklog"
    projects = "projects"
    projectsAll = "projectsAll"
    projectsBacklog = "projectsBacklog"
    projectsClosed = "projectsClosed"
    search = "search"
    teams = "teams"
    archive = "archive"
    quickView = "quickView"


class UserFlagType(str, Enum):
    completedOnboarding = "completedOnboarding"
    desktopInstalled = "desktopInstalled"
    teamsPageIntroductionDismissed = "teamsPageIntroductionDismissed"
    joinTeamIntroductionDismissed = "joinTeamIntroductionDismissed"
    desktopDownloadToastDismissed = "desktopDownloadToastDismissed"
    emptyBacklogDismissed = "emptyBacklogDismissed"
    emptyCustomViewsDismissed = "emptyCustomViewsDismissed"
    emptyActiveIssuesDismissed = "emptyActiveIssuesDismissed"
    emptyMyIssuesDismissed = "emptyMyIssuesDismissed"
    triageWelcomeDismissed = "triageWelcomeDismissed"
    cycleWelcomeDismissed = "cycleWelcomeDismissed"
    projectWelcomeDismissed = "projectWelcomeDismissed"
    projectBacklogWelcomeDismissed = "projectBacklogWelcomeDismissed"
    projectUpdatesWelcomeDismissed = "projectUpdatesWelcomeDismissed"
    analyticsWelcomeDismissed = "analyticsWelcomeDismissed"
    insightsWelcomeDismissed = "insightsWelcomeDismissed"
    insightsHelpDismissed = "insightsHelpDismissed"
    figmaPromptDismissed = "figmaPromptDismissed"
    issueMovePromptCompleted = "issueMovePromptCompleted"
    migrateThemePreference = "migrateThemePreference"
    listSelectionTip = "listSelectionTip"
    canPlaySnake = "canPlaySnake"
    canPlayTetris = "canPlayTetris"
    importBannerDismissed = "importBannerDismissed"
    rewindBannerDismissed = "rewindBannerDismissed"
    dueDateShortcutMigration = "dueDateShortcutMigration"
    slackCommentReactionTipShown = "slackCommentReactionTipShown"
    issueLabelSuggestionUsed = "issueLabelSuggestionUsed"
    threadedCommentsNudgeIsSeen = "threadedCommentsNudgeIsSeen"
    milestoneOnboardingIsSeenAndDismissed = "milestoneOnboardingIsSeenAndDismissed"
    desktopTabsOnboardingDismissed = "desktopTabsOnboardingDismissed"
    all = "all"


class UserFlagUpdateOperation(str, Enum):
    incr = "incr"
    decr = "decr"
    clear = "clear"
    lock = "lock"
